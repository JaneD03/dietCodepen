{
  "name": "grunt-override-config",
  "version": "0.1.0",
  "description": "Override grunt config tasks.",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/masakura/grunt-override-config.git"
  },
  "keywords": [
    "grunt",
    "config",
    "override",
    "task"
  ],
  "author": {
    "name": "Tomo Masakura",
    "email": "tomo.masakura@gmail.com",
    "url": "http://github.com/masakura"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/masakura/grunt-override-config/issues"
  },
  "homepage": "https://github.com/masakura/grunt-override-config",
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-jasmine-node": "^0.2.1"
  },
  "files": [
    "tasks",
    "LICENSE"
  ],
  "readme": "# grunt-override-config v0.1.0\nOverride grunt config task.\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-override-config --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-override-config');\n```\n\n\n## Using Example\n\n### Override JSHint options\nOverride grunt config with running CI.\n\n```javascript\ngrunt.initConfig({\n  // Default JSHint options.\n  jshint: {\n    options: {\n      reporter: require('jshint-stylish')\n    },\n    all: [...]\n  },\n\n  // CI JSHint options.\n  override: {\n    jshint: {\n      options: {\n        reporter: 'checkstyle',\n        reporterOutput: 'checkstyle.xml'\n      }\n    }\n  });\n```\n\nPlease run the \"grunt jshint\" always.\n\n```\n$ grunt jshint\nRunning \"jshint:all\" (jshint) task\n\napp/scripts/main.js\n  line 1  col 2  Expected 'hoge' to have an indentation at 1 instead at 2.\n  line 1  col 2  Expected an assignment or function call and instead saw an expression.\n  line 1  col 2  'hoge' is not defined.\n\nâœ– 3 problems\n\nWarning: Task \"jshint:all\" failed. Use --force to continue.\n\nAborted due to warnings.\n...\n```\n\nPlease run the `grunt override jshint` If you want to operate with CI.\n\n```\n$ grunt override jshint\nRunning \"override:jshint\" (override) task\n{ jshint: \n   { options: \n      { jshintrc: '.jshintrc',\n        reporter: 'checkstyle',\n        reporterOutput: 'checkstyle.xml' },\n     all: \n      [ 'Gruntfile.js',\n        '<%= config.app %>/scripts/{,*/}*.js',\n        '!<%= config.app %>/scripts/vendor/*',\n        'test/spec/{,*/}*.js' ] } }\n\nRunning \"jshint:all\" (jshint) task\n>> Report \"checkstyle.xml\" created.\nWarning: Task \"jshint:all\" failed. Use --force to continue.\n\nAborted due to warnings.\n...\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-override-config@0.1.0",
  "_from": "grunt-override-config@^0.1.0"
}
